<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ncvt.speed.mapper.FileMapper">

    <resultMap id="FileRMap" type="com.ncvt.speed.entity.FileEntity">
        <result column="file_id" property="fileId"></result>
        <result column="user_id" property="userId"></result>
        <result column="du_you" property="duYou"></result>
        <result column="file_name" property="fileName"></result>
        <result column="file_type" property="fileType"></result>
        <result column="file_path" property="filePath"></result>
        <result column="file_size" property="fileSize"></result>
        <result column="hash" property="hash"></result>
        <result column="belong_id" property="belongId"></result>
        <result column="upload_time" property="uploadTime"></result>
        <result column="delete_id" property="deleteId"></result>
        <result column="folder_belong_id" property="folderBelongId"></result>
    </resultMap>

    <select id="queryFile" resultMap="FileRMap">
        SELECT file_path,user_id,belong_id,file_id,file_name,file_size,file_type,upload_time,folder_belong_id,delete_id
        FROM tb_file
        WHERE user_id =#{userId} AND delete_id=0 and du_you=0 ORDER BY file_type
    </select>

    <!-- hash校验 -->
    <select id="queryHash" resultMap="FileRMap">
        SELECT file_id,user_id,file_path,belong_id,folder_belong_id,file_name,file_type,file_size,upload_time,hash,du_you,delete_id
        FROM tb_file WHERE hash=#{hash} limit 2
    </select>

    <!-- 根据id和name查询 -->
    <select id="queryFileByName" resultMap="FileRMap">
        SELECT file_id,user_id,file_path,belong_id,folder_belong_id,file_name,file_type,file_size,upload_time,hash,du_you,delete_id
        FROM tb_file WHERE file_id=#{fileId}
    </select>

    <!-- 根据belongId和fileName查询 -->
    <select id="queryFileByFileName" resultMap="FileRMap">
        SELECT file_id FROM tb_file WHERE belong_id=#{belongId} and file_name=#{fileName}
    </select>

    <!-- 根据id和belong查询 -->
    <select id="queryFileByBelong" resultMap="FileRMap">
        SELECT file_id,belong_id,folder_belong_id,file_name,file_type,upload_time,file_path
        FROM tb_file
        WHERE belong_id=#{belongId} and delete_id=0 and du_you=0
    </select>

    <!-- 查询文件夹下的所有数据 -->
    <select id="queryFileLikeBelongId" resultMap="FileRMap">
        <bind name="belongLike" value="belongId+'%'"/>
        select file_id, user_id, belong_id
        from tb_file
        where belong_id like #{belongLike} and delete_id=0 and du_you=0
    </select>

    <!-- 查询回收站的 -->
    <select id="queryD" resultMap="FileRMap">
        SELECT f.user_id,f.file_id,f.file_name,f.file_size,f.file_type,f.upload_time,d.delete_time,f.delete_id
        FROM tb_file as f,tb_delete as d
        WHERE f.delete_id=d.delete_id AND f.user_id =#{userId} AND f.delete_id!=0 AND f.delete_id!=1 ORDER BY file_type
    </select>

    <!-- 批量加入回收站 -->
    <update id="modifyFileByFileId">
        UPDATE tb_file SET delete_id=
        case
        <foreach collection="list" item="item" index="index">
            when file_id= #{item.fileId} then #{item.deleteId}
        </foreach>
        end
        where file_id in
        <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
            #{item.fileId}
        </foreach>
    </update>

    <!-- 回收站还原 -->
    <update id="restoresFile">
        UPDATE tb_file SET delete_id=0
        where file_id in
        <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </update>

    <!-- 重命名 -->
    <update id="modifyFile">
        UPDATE tb_file SET file_name=#{fileName} WHERE file_id=#{fileId}
    </update>

    <!-- 逻辑删除 -->
    <update id="logicalDeletionFile">
        update tb_file set delete_id=#{deleteId} where file_id=#{fileId}
    </update>

    <!-- 移动 -->
    <update id="movement">
<!--        <bind name="cBelongId" value="cBelongId+'%'"/>-->
<!--        update tb_file t set t.belong_id=#{nBelongId} where t.file_id in-->
<!--        (select * from-->
<!--          (select file_id from tb_file where belong_id like #{cBelongId}) as a-->
<!--        )-->
        UPDATE tb_file SET belong_id=
        case
        <foreach collection="list" item="item" index="index">
            when file_id= #{item.fileId} then #{item.belongId}
        </foreach>
        end
        where file_id in
        <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
            #{item.fileId}
        </foreach>
    </update>

    <!-- 添加收藏 -->
    <update id="modifyFileByDuyou">
        UPDATE tb_file SET du_you=
        case
        <foreach collection="list" item="item" index="index">
            when file_id= #{item.fileId} then #{item.collectId}
        </foreach>
        end
        where file_id in
        <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
            #{item.fileId}
        </foreach>
    </update>

    <!-- 查询收藏 -->
    <select id="queryFileByDuyou" resultMap="FileRMap">
        SELECT file_id,user_id,file_path,belong_id,folder_belong_id,file_name,file_type,file_size,upload_time,hash,du_you,delete_id
        FROM tb_file WHERE user_id=#{userId} and du_you!=0 ORDER BY file_type
    </select>

    <!-- 移出收藏 -->
    <update id="modifyFileByDuyouDelete">
        UPDATE tb_file SET du_you=0
        where file_id in
        <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </update>

    <!-- 查询回收站过期的数据 -->
    <select id="queryAllDelete" resultMap="FileRMap">
        SELECT f.user_id,f.file_id,d.delete_time,f.hash,f.file_path
        FROM tb_file as f,tb_delete as d
        WHERE f.delete_id=d.delete_id AND d.delete_time - #{time} <![CDATA[<]]> 604800000
    </select>

    <!-- 根据file_id批量删除 -->
    <delete id="deleteFileById">
        delete from tb_file where file_id in
        <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>

    <!-- 根据file_id批量彻底逻辑删除 -->
    <update id="completelyDelete">
        UPDATE tb_file SET delete_id=1
        where file_id in
        <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </update>

    <!-- 查询彻底删除的数据 -->
    <select id="queryFileByD" resultMap="FileRMap">
        SELECT file_id,file_path FROM tb_file WHERE delete_id=1
    </select>

    <!-- keyProperty="userId" 设置主键字段对应的实体类 -->
    <insert id="addFile" useGeneratedKeys="true">
        INSERT INTO tb_file(
            user_id,
            du_you,
            file_name,
            file_type,
            file_path,
            file_size,
            hash,
            belong_id,
            upload_time,
            delete_id,
            folder_belong_id
        ) VALUES (
            #{userId},#{duYou},#{fileName},#{fileType},#{filePath},#{fileSize},#{hash},#{belongId},#{uploadTime},#{deleteId},#{folderBelongId}
        )
    </insert>

</mapper>